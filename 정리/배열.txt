배열 
변수-->많은 변수 
변수 10 선언 10초기화 10 연산10 이렇게 필요해
근데 묶어서 표현 하게되변 변수선언을  10번 하지 않아두댕
1.변수선언 
2.일련번호 ,연속된 데이터라면 반복문for을 이용해서 쉽게 처리 할 수 있다 
3.모든 변수에 +10 ->이것 또한 반복문으로 연결 할 수 있다 

변수생성 참보방법을 보게 뵈면 배열 이름 [index]

배열의 장점

공통 작업을 빠르게 할 수 있다 
그리고 코드도 줄일 수 있다.

기본적으로 묶음 집합 
반복문 for
같은 타입의 변수들만 묶을 수 있다 


int[] numArr=new int[9]; 
배열에도 인스턴스값이 들어간다 주소값을 참조하기 위함

배열이란 같은 타입의 여러 변수를 하나의 묶음으로 다루는 것

많은 양의 데이터 값을 다를 때 유용하다
배열의 각 요소는 서로 연속적이다.
int []score=new int[5];
new 키워드는 주소 값을 반환해 준다 !!!! 
배열의 묶음을 반환해준다 !!
Score [위치값] 위치값을 인덱스라고한다  

int []  배열의 이름 ==> 배열 변수의 선언 
int score =null  배열의  초기값도 null이다

new int [5];
배열생성 :int 타입의 변수 5개 생성 묶음  배열의 주소값 반환

타입 [] 변수이름; -> 이방법을 많이 사용함 

배열을 이용하면 순차적으로 접근 할 수있다 

for(int i=0;int <9;i++;){
numArr[i]=10;
}

int[] score 배열 선언 
score=new int[5]; 배열 생성

배열=> 참조형 변수를 다루는 배열 
!!!★배열도 인스턴스이다 ★
참조 변수를 통해서 참조한다 

배열이름 [인덱스] 0~n-1까지 들어감 

배열의 사이즈 arr.lenght 요소의 개수 배열 의 길이 

String[] strArr=new String[3]; //배열의 변수 주소 값을 갖는다
strArr[0]=new String("Java"); //주소값만 갖는다
strArr[1]=new String("Flex");
strArr[2]=new String("Ruby");
참조형 형식으로 다루는 배열은  주소값을 준다 
